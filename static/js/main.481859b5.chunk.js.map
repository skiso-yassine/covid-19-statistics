{"version":3,"sources":["components/PieChart.jsx","components/CountryDetaille.js","App.js","reportWebVitals.js","index.js"],"names":["PieChart","props","getAll","fetch","then","res","json","setState","dataRow","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","data","datasets","catch","err","console","log","state","map","row","i","name","value","getDataWithCountrie","countrie","getAllCountries","allCountries","listAllCountries","input","country","toLowerCase","match","style","height","to","pathname","cnt","src","countryInfo","flag","alt","handleSearch","event","target","toUpperCase","date","Date","labels","backgroundColor","options","legend","display","position","bind","this","h6","className","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minites","getMinutes","type","placeholder","onChange","Component","CountryDetaille","useParams","padding","location","continent","population","casesPerOneMillion","deathsPerOneMillion","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.481859b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PieChart extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            date:new Date(),\r\n            data:{\r\n                labels:['Cases','Deaths','Recovered','Active'],\r\n                datasets:[\r\n                    {\r\n                        data:[20,50,80,90],\r\n                        backgroundColor:['#3393FF','#F62023','#5BF349','#10F4DC'],\r\n                    }\r\n                ],\r\n            },\r\n            options: {\r\n                legend: {\r\n                    display: true,\r\n                    position:'bottom'\r\n                    }\r\n                }\r\n        };\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n       \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAll();\r\n        this.getAllCountries();\r\n        \r\n        \r\n    }\r\n    \r\n    //get Home data\r\n    getAll = () =>{\r\n        fetch('https://disease.sh/v3/covid-19/all')\r\n        .then(res => {\r\n            res.json().then(res => {\r\n                this.setState({\r\n                    dataRow:[\r\n                        {'name':'Cases','value':res.cases},\r\n                        {'name':'Today Cases','value':res.todayCases},\r\n                        {'name':'Deaths','value':res.deaths},\r\n                        {'name':'Today Deaths','value':res.todayDeaths},\r\n                        {'name':'Recovered','value':res.recovered},\r\n                        {'name':'Today Recovered','value':res.todayRecovered},\r\n                        {'name':'Active','value':res.active},\r\n                        {'name':'Critical','value':res.critical}\r\n                    ],\r\n                    data:{\r\n                        datasets:[\r\n                            {\r\n                                data:[res.cases,res.deaths,res.recovered,res.active]\r\n                            }\r\n                        ]\r\n                    },\r\n                    \r\n                });\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    //create row\r\n    dataRow = () =>{\r\n        if(this.state.dataRow){\r\n               return this.state.dataRow.map( (row,i) =>{\r\n                return  ( \r\n                        <tr key={i} >\r\n                            <td><span>{row.name}</span>  </td>\r\n                            <td> {row.value} </td>\r\n                        </tr>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //get data with spesific countrie \r\n    getDataWithCountrie = (countrie) =>{\r\n        fetch('https://disease.sh/v3/covid-19/countries/'+countrie)\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    //get data with all countries\r\n    getAllCountries = () =>{\r\n        fetch('https://disease.sh/v3/covid-19/countries')\r\n        .then(res => {\r\n            res.json().then(res => {\r\n                this.setState({\r\n                    allCountries:res\r\n                })\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    listAllCountries = () =>{\r\n        if (this.state.allCountries) {\r\n            return this.state.allCountries.map((countrie,i) =>{\r\n                if(this.state.input){\r\n                    if(countrie.country.toLowerCase().match(this.state.input.toLowerCase())){\r\n                        return ( \r\n                            \r\n                                <tr style={{height: '80px'}} key={i} >\r\n                                   <td><Link to={{\r\n                                                pathname: countrie.country+'/detailles',\r\n                                                cnt:countrie\r\n                                            }}  ><img src={countrie.countryInfo.flag} alt='...' /></Link></td>\r\n                                    <td><Link to={{\r\n                                                pathname: countrie.country+'/detailles',\r\n                                                cnt:countrie\r\n                                            }}  >{countrie.country}</Link></td>\r\n                                    \r\n                                    \r\n                                </tr>\r\n                        )\r\n                    }\r\n                    // if (countrie.country.toLowerCase().indexOf(this.state.input.toLowerCase()) > -1) {\r\n                    //     return (\r\n                    //                 <tr style={{height: '80px',display:''}} key={i}>\r\n                    //                     <td><img src={countrie.countryInfo.flag} /></td>\r\n                    //                     <td> {countrie.country} </td>\r\n                    //                 </tr>\r\n                    //             )\r\n                    // }else{\r\n                    //     return (\r\n                    //         <tr style={{height: '80px',display:'none'}} key={i}>\r\n                    //             <td><img src={countrie.countryInfo.flag} /></td>\r\n                    //             <td> {countrie.country} </td>\r\n                    //         </tr>\r\n                    //     )\r\n                    // }\r\n                }else{\r\n                        return (\r\n                            \r\n                                <tr style={{height: '80px'}} key={i}>\r\n                                    <td><Link to={{\r\n                                                pathname: countrie.country+'/detailles',\r\n                                                cnt:countrie\r\n                                            }}  ><img src={countrie.countryInfo.flag} alt='...'/></Link></td>\r\n                                    <td><Link \r\n                                            to={{\r\n                                                pathname: countrie.country+'/detailles',\r\n                                                cnt:countrie\r\n                                            }} >{countrie.country}</Link></td>\r\n                            </tr>\r\n                            \r\n                            \r\n                        )\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) =>{\r\n        this.setState({\r\n            input:event.target.value.toUpperCase()\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        var h6 = <h6 className=\"text-center\"> Last update:</h6>;\r\n        if(this.state.date != null){\r\n            const day = this.state.date.getDate();\r\n            const month = this.state.date.getMonth();\r\n            var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            const year = this.state.date.getFullYear();\r\n            const hours = this.state.date.getHours();\r\n            const minites = this.state.date.getMinutes();\r\n            h6 = <h6 className=\"text-center\"> Last update: {months[month]+\", \"+day+\", \"+year+\", \"+hours+\":\"+minites+\" GMT\"} </h6>;\r\n        }else{\r\n            h6 = <h6 className=\"text-center\"> Last update: No Date!! </h6>\r\n        }\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3 mt-3 text-center\">COVID-19 CORONAVIRUS PANDEMIC</h3>\r\n                {h6}\r\n                <Pie data={this.state.data} options={this.state.options} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm column \">\r\n                        <table>\r\n                            <tbody>\r\n                                {this.dataRow()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm column table-responsive\" >\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend \">\r\n                                <span className=\"input-group-text\" >\r\n                                    <i className=\"fa fa-search\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form-control input \" placeholder=\"Countrie\" onChange={this.handleSearch}/>\r\n                        </div>\r\n                        <table className=\"mt-3 \">\r\n                            <tbody>\r\n                                {this.listAllCountries()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PieChart;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CountryDetaille = (props) => {\r\n        \r\n        var date = new Date();\r\n    \r\n        let { country } = useParams();\r\n        \r\n            const day = date.getDate();\r\n            const month = date.getMonth();\r\n            var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            const year = date.getFullYear();\r\n            const hours = date.getHours();\r\n            const minites = date.getMinutes();\r\n\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h3 className=\"mt-5 text-center\">{country} Detailles</h3>\r\n                <h6 className=\"text-center\"> Last update: {months[month]+\", \"+day+\", \"+year+\", \"+hours+\":\"+minites+\" GMT\"} </h6>\r\n                    <div className=\"columnDet\">\r\n                        <div className=\"row \" style={{padding: '15px'}}>\r\n                            <div className=\"col-lg-4 \">\r\n                                <img src={props.location.cnt.countryInfo.flag} className=\"country-flag\" alt=\"...\"/>\r\n                            </div>\r\n                            <div className=\"col-lg-8 \">\r\n                                <table className=\"tableDet\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><span>Continent </span></td>\r\n                                            <td>{props.location.cnt.continent}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td> <span>Country</span>  </td>\r\n                                            <td> {props.location.cnt.country} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Population</span> </td>\r\n                                            <td> {props.location.cnt.population} </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><span>Cases</span> </td>\r\n                                            <td> {props.location.cnt.cases} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Today Cases </span></td>\r\n                                            <td> {props.location.cnt.todayCases} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Deaths </span></td>\r\n                                            <td> {props.location.cnt.deaths} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Today Deaths </span></td>\r\n                                            <td> {props.location.cnt.todayDeaths} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Recovered </span></td>\r\n                                            <td> {props.location.cnt.recovered} </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm\" >\r\n                            <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><span>Today Recovered </span></td>\r\n                                            <td> {props.location.cnt.todayRecovered} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Active </span></td>\r\n                                            <td> {props.location.cnt.active} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Critical </span></td>\r\n                                            <td> {props.location.cnt.critical} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Cases Per One Million </span></td>\r\n                                            <td> {props.location.cnt.casesPerOneMillion} </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span>Deaths Per One Million </span></td>\r\n                                            <td> {props.location.cnt.deathsPerOneMillion} </td>\r\n                                        </tr>\r\n                                        \r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </div>\r\n        )\r\n}\r\nexport default CountryDetaille;","import './App.css';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport PieChart from './components/PieChart';\nimport CountryDetaille from './components/CountryDetaille';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path='/' component={PieChart} />\n      <Route exact path='/:country/detailles' component={CountryDetaille} />\n      \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}